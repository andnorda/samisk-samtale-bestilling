name: Deploy-to-prod
on:
    release:
        types: [released]

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: prod-gcp:personbruker
        steps:
            - uses: actions/checkout@v2
            - name: Abort if branch is not master
              if: github.event.release.target_commitish != 'master'
              run: echo "Release is not on master, aborting"; exit 1;
            - name: Setup node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '16.15.0'
                  registry-url: 'https://npm.pkg.github.com'
                  cache: 'npm'
            - name: Define build environment
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  IMAGE_VERSION_RAW=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
                  echo "CI=true" >> $GITHUB_ENV
                  echo "IMAGE_REGISTRY=ghcr.io/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
                  echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
                  echo "IMAGE_VERSION=${IMAGE_VERSION_RAW,,}" >> $GITHUB_ENV
                  echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
            - name: Define app environmment
              env:
                  API_CLIENT_ID: ${{ secrets.API_CLIENT_ID }}
              run: |
                  cat > .env <<EOF
                  ENV=prod
                  API_URL=https://tilbakemeldinger-api.prod-fss-pub.nais.io/mottak/bestilling-av-samtale
                  APP_BASEPATH=/person/bestilling-av-samisk-samtale
                  APP_ORIGIN=https://www.nav.no
                  DECORATOR_FALLBACK_URL=https://www.nav.no/dekoratoren
                  KONTAKTINFO_API_URL=https://www.nav.no/person/personopplysninger-api/kontaktinformasjon
                  EOF
            - name: NPM cache
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Nextjs cache
              uses: actions/cache@v2
              with:
                  path: ${{ github.workspace }}/.next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
            - name: Build application
              run: npm run build
            - name: Docker build and push
              run: |
                  echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
                  docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION .
                  docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION
            - name: Generate nais variables
              run: |
                  cat > .nais/vars.yaml <<EOF
                  namespace: personbruker
                  image: $IMAGE_REGISTRY/$IMAGE_NAME
                  version: $IMAGE_VERSION
                  EOF
            - uses: nais/deploy/actions/deploy@master
              env:
                  CLUSTER: prod-gcp
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  RESOURCE: .nais/config.prod.yaml
                  VARS: .nais/vars.yaml
